### DVA group project
### Team 71
### Author: Cong Zhang
rm(list=ls())
### Part 1: data cleaning and integration
library(data.table)
library(dplyr)
library(ggplot2)
library(stringr)
library(DT)
library(tidyr)
library(corrplot)
library(leaflet)
library(lubridate)
library(scales)
# general settings
setwd("/Users/shangguan/Library/Mobile Documents/com~apple~CloudDocs/Work/GT/Data & Visual Analytics/Project/Team71final/CODE/phase_i/DataCleaning")
input_dir = "./SF/"
output_dir = "./output/"
# read input data (100 cities housing data)
files <- list.files(path = input_dir, pattern = ".csv")
temp <- lapply(paste(input_dir,files,sep="/"), fread, sep=",")
rawData <- rbindlist(temp, fill=TRUE)
# select meaningful columns for feature extraction
myData <- rawData %>% select("state_city_zip",
"status",
"area_sqft",
"bedroom",
"bathroom",
"zestimate",
"asking_price",
"type",
"year_built",
"heating",
"cooling",
"parking",
"elementrary_rating",
"middle_school_rating",
"high_school_rating",
"kitchen_feature",
"construction_material",
"roof",
"utility",
"annual_tax_amount")
# remove outliers
# filter out houses with no Zestimate value
myData <- myData[substr(zestimate, 1, 1) == "$",]
### feature selection
# 1. area_sqft
# 2. bedroom
# 3. bathroom
# 4. type
# 5. year_built
# 6. heating
# 7. cooling
# 8. parking
# 9. elementrary_rating
# 10. middle_school_rating
# 11. high_school_rating
# 12. annual_tax_amount
# label: zestimate
myData <- myData %>% select("area_sqft",
"bedroom",
"bathroom",
"type",
"year_built",
"heating",
"cooling",
"parking",
"elementrary_rating",
"middle_school_rating",
"high_school_rating",
"annual_tax_amount",
"zestimate")
### format data
# myData1 <- myData
columns <- c("area_sqft")
myData[, columns] <- lapply(columns, function(x) as.numeric(gsub(",","", myData[[x]])))
columns <- c("annual_tax_amount", "zestimate")
myData[, columns] <- lapply(columns, function(x) as.numeric(gsub("[$,]","", myData[[x]])))
columns <-c("bedroom", "bathroom", "year_built",
"elementrary_rating", "middle_school_rating", "high_school_rating")
myData[, columns] <- lapply(columns, function(x) as.numeric(myData[[x]]))
# filter out potential outliers
myData <- myData[!(myData$area_sqft < 100) | is.na(myData$area_sqft), ]
myData <- myData[!(myData$bedroom > 10) | is.na(myData$bedroom), ]
myData <- myData[!(myData$bathroom > 10) | is.na(myData$bathroom), ]
# categorical features processing
# convert it to numerical data types
# unique(myData$type)
# [1] "Condo"                 "Single Family"         "Townhouse"             "Multi Family"          "Mobile / Manufactured"
# [6] "null"                  "Miscellaneous"         "Multiple Occupancy"    "Other"                 "11/5"
# [11] "Cooperative"
index <- myData$type %in% c("null", "Miscellaneous", "11/5", "Cooperative", "Other")
myData$type[index] <- NA
myData$type[myData$type == "Mobile / Manufactured"] <- "Mobile"
myData$type[myData$type == "Single Family"] <- "Single"
myData$type[myData$type %in% c("Multi Family", "Multiple Occupancy")] <- "Multiple"
# unique(myData$heating)
# [1] "Electric"                       "No Data"                        "Wall"                           "Forced air"
# [5] "Other"                          "Radiant"                        "Forced air, Wall"               "Baseboard"
# [9] "Forced air, Other"              "Electric, Gas, Other"           "null"                           "Forced air, Stove"
# [13] "Electric, Gas"                  "Heat pump"                      "None"                           "Gas"
# [17] "Baseboard, Wall"                "Baseboard, Forced air"          "Stove, Wall"                    "Gas, Solar"
# [21] "Baseboard, Stove"               "Other, Stove"                   "Forced air, Radiant"            "Stove"
# [25] "Forced air, Radiant, Stove"     "Forced air, Heat pump"          "Geothermal, Heat pump"          "Heat pump, Radiant"
# [29] "Baseboard, Radiant"             "Propane butane"                 "Other, Wall"                    "Baseboard, Forced air, Other"
# [33] "Forced air, Heat pump, Other"   "Radiant, Wall"                  "Other, Radiant"                 "Contact manager"
# [37] "Forced air, Stove, Wall"        "Baseboard, Forced air, Stove"   "Baseboard, Heat pump"           "Other, Stove, Wall"
# [41] "Solar"                          "Forced air, Other, Radiant"     "Baseboard, Forced air, Radiant" "Baseboard, Other"
index <- myData$heating %in% c("no Data", "null", "Other", "Other, Radiant", "Other, Stove",
"Other, Stove, Wall", "Other, Wall", "Contact manager",
"Solar", "No Data", "None")
myData$heating[index] <- NA
myData$heating[grepl('^Baseboard', myData$heating, ignore.case=T)] <- "Baseboard"
myData$heating[grepl('^Electric', myData$heating, ignore.case=T)] <- "Electric"
myData$heating[grepl('^Forced', myData$heating, ignore.case=T)] <- "ForcedAir"
myData$heating[grepl('^Gas', myData$heating, ignore.case=T)] <- "Gas"
myData$heating[grepl('^Heat', myData$heating, ignore.case=T)] <- "HeatPump"
myData$heating[myData$heating %in% c("Geothermal, Heat pump", "HeatPump", "Propane butane")] <- NA
myData$heating[myData$heating %in% c("Radiant", "Radiant, Wall", "Wall", "Stove", "Stove, Wall")] <- "Wall"
# unique(myData$cooling)
# [1] "None"                                      "No Data"                                   "Central"
# [4] "Other"                                     "Wall"                                      "Central, Other"
# [7] "null"                                      "Central, Solar"                            "Other, Wall"
# [10] "Central, Wall"                             "Central, Evaporative"                      "Evaporative"
# [13] "Other, None"                               "Central, Solar, Refrigeration"             "Central, Solar, Wall"
# [16] "Wall, None"                                "Central, None"                             "Central, Refrigeration"
# [19] "Central, Evaporative, Refrigeration"       "Central, Geothermal, Solar, Refrigeration" "Central, Evaporative, Other"
# [22] "Other, Solar"                              "Solar"                                     "Contact manager"
# [25] "Refrigeration"                             "Central, Other, Solar"                     "Solar, Wall"
index <- myData$cooling %in% c("No Data", "Contact manager", "None", "null", "Evaporative",
"Other", "Other, None", "Other, Solar", "Refrigeration", "Solar")
myData$cooling[index] <- NA
myData$cooling[grepl('^Central', myData$cooling, ignore.case=T)] <- "Central"
myData$cooling[myData$cooling %in% c("Other, Wall", "Solar, Wall", "Wall", "Wall, None")] <- "Wall"
# unique(myData$parking)
# [1] "No Data"                              "Detached Garage"                      "1 space"
# [4] "Attached Garage"                      "2 spaces"                             "Off street"
# [7] "Carport"                              "5 spaces"                             "3 spaces"
# [10] "Condo"                                "Townhouse"                            "Single Family"
# [13] "Multi Family"                         "null"                                 "Mobile / Manufactured"
# [16] "Miscellaneous"                        "8 spaces"                             "Carport, Attached Garage"
# [19] "4 spaces"                             "6 spaces"                             "Off street, On street"
# [22] "Attached Garage, Detached Garage"     "None"                                 "On street"
# [25] "Carport, Detached Garage"             "11 spaces"                            "Carport, Off street"
# [28] "Carport, Off street, Detached Garage" "Multiple Occupancy"                   "Carport, Off street, On street"
# [31] "9 spaces"                             "Off street, Attached Garage"          "Off street, Detached Garage"
# [34] "16 spaces"                            "15 spaces"                            "12 spaces"
# [37] "7 spaces"                             "On street, Attached Garage"           "10 spaces"
# [40] "Other"                                "No"                                   "Cooperative"
index <- myData$parking %in% c("Condo", "Cooperative", "Miscellaneous", "Mobile / Manufactured", "Multi Family",
"Multiple Occupancy", "No", "No Data", "None", "null", "Other",
"Single Family", "Townhouse")
myData$parking[index] <- NA
myData$parking[grepl('^Carport', myData$parking, ignore.case=T)] <- "Garage"
myData$parking[grepl('Garage$', myData$parking, ignore.case=T)] <- "Garage"
myData$parking[myData$parking %in% c("Off street", "Off street, On street", "On street")] <- "1 space"
myData$parking[myData$parking %in% c("5 spaces", "6 spaces", "7 spaces",
"8 spaces", "9 spaces", "10 spaces",
"11 spaces", "12 spaces", "15 spaces",
"16 spaces")] <- "5+ spaces"
### output csv file
write.csv(myData, file = paste(output_dir,"data.csv",sep="/"), row.names=FALSE, na="")
### some vis
# Histogram of zestimate
ggplot(myData, aes(x=zestimate)) +
geom_histogram(colour="darkblue", fill="lightblue") +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
labs(y = "Count", x = "Zestimate ($)") +
theme_bw()
ggsave(paste(output_dir, "zestimateHistogram.png", sep = "/"))
# boxplot of school ratings
tmp <- gather(myData, school_type, rating, elementrary_rating:high_school_rating, factor_key=TRUE)
ggplot(tmp, aes(x=school_type, y=rating, color = school_type)) +
geom_boxplot() +
theme_bw() +
scale_x_discrete(name = "School type", labels=c("elementrary_rating" = "Elementary", "middle_school_rating" = "Middle school",
"high_school_rating" = "High school")) +
scale_y_continuous(name = "Rating", breaks=seq(0,10,2)) +
theme(legend.position = "none") +
coord_fixed(ratio=0.15)
ggsave(paste(output_dir, "schoolRatings.png", sep = "/"))
# boxplot of type
ggplot(myData[!is.na(myData$type),], aes(x=type, y=zestimate, color = type)) +
geom_boxplot() +
theme_bw() +
scale_x_discrete(name = "House type") +
scale_y_continuous(name = "Zestimate ($)", limits = c(0, 3e6)) +
theme(legend.position = "none") +
coord_fixed(ratio=0.0000007)
ggsave(paste(output_dir, "type.png", sep = "/"))
# boxplot of heating
ggplot(myData[!is.na(myData$heating),], aes(x=heating, y=zestimate, color = heating)) +
geom_boxplot() +
theme_bw() +
scale_x_discrete(name = "Heating type") +
scale_y_continuous(name = "Zestimate ($)", limits = c(0, 3e6)) +
theme(legend.position = "none") +
coord_fixed(ratio=0.0000007)
ggsave(paste(output_dir, "heating.png", sep = "/"))
# boxplot of cooling
ggplot(myData[!is.na(myData$cooling),], aes(x=cooling, y=zestimate, color = cooling)) +
geom_boxplot() +
theme_bw() +
scale_x_discrete(name = "Cooling type") +
scale_y_continuous(name = "Zestimate ($)", limits = c(0, 3e6)) +
theme(legend.position = "none") +
coord_fixed(ratio=0.0000003)
ggsave(paste(output_dir, "cooling.png", sep = "/"))
# boxplot of parking
ggplot(myData[!is.na(myData$parking),], aes(x=parking, y=zestimate, color = parking)) +
geom_boxplot() +
theme_bw() +
scale_x_discrete(name = "Parking") +
scale_y_continuous(name = "Zestimate ($)", limits = c(0, 3e6)) +
theme(legend.position = "none") +
coord_fixed(ratio=0.0000009)
ggsave(paste(output_dir, "parking.png", sep = "/"))
# missing values
tmp <- myData
tmp$zestimate <- NULL
missing_values <- tmp %>% summarize_all(funs(sum(is.na(.))/n()))
missing_values <- gather(missing_values, key="feature", value="missing_percentage")
missing_values %>%
ggplot(aes(x=reorder(feature, -missing_percentage),y = missing_percentage)) +
geom_bar(stat="identity",fill="red") +
coord_flip() +
theme_bw() +
scale_x_discrete(name = "Features") +
scale_y_continuous(name = "Missing value percentage", limits = c(0, 1))
ggsave(paste(output_dir, "dataQuality.png", sep = "/"))
# zestimate scatter plot along w/ year_built
myData %>%
group_by(year_built) %>%
summarize(mean_zestimate = mean(zestimate),n()) %>%
ggplot(aes(x=year_built,y=mean_zestimate)) +
geom_smooth(color="grey40") +
geom_point(color="red") +
coord_cartesian(ylim=c(0,5e6)) +
theme_bw() +
scale_x_continuous(name = "Year built", breaks=seq(1865,2020,15)) +
scale_y_continuous(name = "Zestimate distribution ($)", limits = c(0, 5e6)) +
theme(axis.text.x = element_text(angle=45, vjust = 0.25)) +
coord_fixed(ratio=0.00001)
ggsave(paste(output_dir, "zestimateChange.png", sep = "/"))
# zestimate scatter plot along w/ area_sqft
myData %>% ggplot(aes(x=area_sqft, y=zestimate)) +
geom_smooth(color="red") +
theme_bw() +
scale_x_log10(name = "Total area (sqft)") +
scale_y_log10(name = "Zestimate ($)") +
coord_fixed(ratio=0.3)
ggsave(paste(output_dir, "zestimateChange2.png", sep = "/"))
# zestimate scatter plot along w/ annual_tax_amount
myData %>% ggplot(aes(x=annual_tax_amount, y=zestimate)) +
geom_smooth(color="red") +
theme_bw() +
scale_x_log10(name = "Annual tax amount ($)") +
scale_y_log10(name = "Zestimate ($)") +
coord_fixed(ratio=0.45)
ggsave(paste(output_dir, "zestimateChange3.png", sep = "/"))
# zestimate scatter plot along w/ bedroom
myData %>% ggplot(aes(x=bedroom, y=zestimate)) +
geom_smooth(color="red") +
theme_bw() +
scale_x_log10(name = "Number of bedrooms") +
scale_y_log10(name = "Zestimate ($)") +
coord_fixed(ratio=0.4)
ggsave(paste(output_dir, "zestimateChange4.png", sep = "/"))
# zestimate scatter plot along w/ bathroom
myData %>% ggplot(aes(x=bathroom, y=zestimate)) +
geom_smooth(color="red") +
theme_bw() +
scale_x_log10(name = "Number of bathrooms") +
scale_y_log10(name = "Zestimate ($)") +
coord_fixed(ratio=0.3)
ggsave(paste(output_dir, "zestimateChange5.png", sep = "/"))
View(rawData)
View(rawData)
View(temp)
View(rawData)
View(myData)
View(myData)
